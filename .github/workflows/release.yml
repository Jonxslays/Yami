name: Publish release

on:
  release:
    types: [published]

jobs:
  pypi:
    name: Pypi release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run pre-release script
        id: prerelease
        run: ./scripts/pre-release.sh

      - name: Build and publish
        uses: JRubics/poetry-publish@v1.8
        if: steps.prerelease.conclusion == 'success'
        with:
          pypi_token: ${{ secrets.PYPI_TOKEN }}
          ignore_dev_requirements: "yes"

  docs:
    name: Docs release
    needs: pypi
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install poetry
        uses: Gr1N/setup-poetry@v7

      - name: Build and deploy
        run: |
          pip install --upgrade pip
          poetry install -q
          poetry run nox -s docs
          ./scripts/docs-deploy.sh stable

  post-release:
    name: Post release
    needs: docs
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run post-release script
        run: ./scripts/post-release.sh
